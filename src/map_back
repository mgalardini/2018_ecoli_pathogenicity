#!/usr/bin/env python


import os


def get_options():
    import argparse

    description = 'Map filtered kmers to original genomes'
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument('kmers',
                        help='Filtered kmers table')
    parser.add_argument('genome',
                        help='Original genome fasta file')

    parser.add_argument("--bwa",
                        help="Location of bwa executable "
                        "[default=bwa]",
                        default="bwa")
    parser.add_argument("--bwa-algorithm",
                        help="bwa algorithm "
                        "[default=fastmap]",
                        default="fastmap")
    parser.add_argument("--tmp-prefix",
                        help="Directory to store temporary files "
                        "[default=./]",
                        default=os.getcwd())
    
    return parser.parse_args()


if __name__ == "__main__":
    options = get_options()

    import shutil
    from Bio import SeqIO
    
    from pyseer.kmer_mapping.bwa import bwa_index
    from pyseer.kmer_mapping.bwa import bwa_iter
    
    kmers_file = open(options.kmers)
    _ = kmers_file.readline()
    kmers = sorted([kmer.rstrip().split()[0] for kmer in kmers_file])
    kmers_file.close()

    genome = os.path.split(options.genome)[-1].split('.')[0]

    kmers_fasta = os.path.join(options.tmp_prefix, '%s_kmers.fasta' % genome)
    kmers_file = open(kmers_fasta, 'w')
    for kmer in kmers:
        kmers_file.write('>%s\n' % kmer)
        kmers_file.write('%s\n' % kmer)
    kmers_file.close()
    
    shutil.copy(options.genome, options.tmp_prefix)
    genome_file = os.path.join(options.tmp_prefix, os.path.split(options.genome)[-1])
    bwa_index(genome_file)
    for mapping, kmer in zip(bwa_iter(genome_file, kmers_fasta, options.bwa_algorithm),
                             SeqIO.parse(kmers_fasta, 'fasta')):
        if mapping.mapped:
            print('\t'.join((genome, kmer.id, 'mapped')))

    # cleanup
    os.remove(kmers_fasta)
    os.remove(genome_file)
    os.remove(genome_file + '.amb')
    os.remove(genome_file + '.ann')
    os.remove(genome_file + '.bwt')
    os.remove(genome_file + '.pac')
    os.remove(genome_file + '.sa')
